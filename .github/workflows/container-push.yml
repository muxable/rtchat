name: Push agent to container registry

on:
  push:
    paths:
      - "agent/**"
    branches:
      - main

env:
  PROJECT_ID: rtchat-47692
  GKE_CLUSTER: agent
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: agent
  IMAGE: agent

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo $FIREBASE_ADMIN_SDK_SERVICE_ACCOUNT_JSON > agent/service_account.json
        env:
          FIREBASE_ADMIN_SDK_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_ADMIN_SDK_SERVICE_ACCOUNT_JSON }}

      - run: |
          echo "GCP_PROJ_ID=rtchat-47692" >> agent/.env
          echo "GOOGLE_APPLICATION_CREDENTIALS=service_account.json" >> agent/.env
          echo "TWITCH_CLIENT_ID=$TWITCH_CLIENT_ID" >> agent/.env
          echo "TWITCH_CLIENT_SECRET=$TWITCH_CLIENT_SECRET" >> agent/.env
          echo "TWITCH_BOT_USER_ID=JSdHKOEgwcZijVsuXXdftmizt6E3" >> agent/.env
          cat agent/.env
        env:
          TWITCH_CLIENT_ID: ${{ secrets.TWITCH_CLIENT_ID }}
          TWITCH_CLIENT_SECRET: ${{ secrets.TWITCH_CLIENT_SECRET }}

      # Check that it builds.
      # - uses: actions/setup-node@v2
      # - run: npm ci
      #   working-directory: agent
      # - run: npm run build --if-present
      #   working-directory: agent
      # - run: npm test
      #   working-directory: agent

      - uses: google-github-actions/setup-gcloud@master
        with:
          version: "331.0.0"
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          project_id: rtchat-47692

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      # Build the Docker image
      - name: Build
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" agent

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl set image deployment/agent agent=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
