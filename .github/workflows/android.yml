name: Release to Google Play Store

on:
  push:
    paths:
      - "android/**"
      - "assets/**"
      - "lib/**"
      - "pubspec.lock"
      - "pubspec.yaml"
    branches:
      - main
  release:
    types: [released]
  workflow_dispatch:

jobs:
  apk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo $UPLOAD_KEYSTORE | base64 -d > android/app/upload-keystore.jks
        env:
          UPLOAD_KEYSTORE: ${{ secrets.UPLOAD_KEYSTORE }}
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "16"
      - uses: subosito/flutter-action@v1
      - run: flutter pub get
      - run: flutter build apk --split-per-abi --release --build-name=${{ steps.get-latest-tag.outputs.tag }}
        env:
          STORE_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_PASSWORD }}
          KEY_ALIAS: upload
          STORE_FILE: upload-keystore.jks

      - uses: actions/upload-artifact@v2
        with:
          name: app-armeabi-v7a-release.apk
          path: build/app/outputs/apk/release/app-armeabi-v7a-release.apk
      - uses: actions/upload-artifact@v2
        with:
          name: app-arm64-v8a-release.apk
          path: build/app/outputs/apk/release/app-arm64-v8a-release.apk
      - uses: actions/upload-artifact@v2
        with:
          name: app-x86_64-release.apk
          path: build/app/outputs/apk/release/app-x86_64-release.apk

  aab:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo $UPLOAD_KEYSTORE | base64 -d > android/app/upload-keystore.jks
        env:
          UPLOAD_KEYSTORE: ${{ secrets.UPLOAD_KEYSTORE }}
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "16"
      - uses: subosito/flutter-action@v1
      - run: flutter pub get
      - run: flutter build appbundle --release --build-name=${{ steps.get-latest-tag.outputs.tag }}
        env:
          STORE_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_PASSWORD }}
          KEY_ALIAS: upload
          STORE_FILE: upload-keystore.jks

      - run: mkdir whatsnew
      - run: echo "${{ github.event.release.body }}" > whatsnew/whatsnew-en-US
        if: github.event_name == 'release'

      - uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.rtirl.chat
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          whatsNewDirectory: whatsnew
          track: ${{ github.event_name == 'release' && 'production' || 'alpha' }}
          mappingFile: build/app/outputs/mapping/release/mapping.txt

      - uses: actions/upload-artifact@v2
        with:
          name: app-release.aab
          path: build/app/outputs/bundle/release/app-release.aab
